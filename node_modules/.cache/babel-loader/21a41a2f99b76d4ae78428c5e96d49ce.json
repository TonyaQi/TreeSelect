{"ast":null,"code":"var _jsxFileName = \"/Users/qitong/\\u7EC3\\u4E60/TreeSelect/src/TreeSelect/index.js\";\nimport React from 'react';\nimport { Checkbox } from 'antd';\nimport { DownOutlined, RightOutlined } from '@ant-design/icons';\nimport clone from '../utils/index';\n\nclass TreeSelect extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.generateTree = (data, lastNode) => {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }\n      }, data.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }\n      }, Array.isArray(item.children) ? item.expend ? /*#__PURE__*/React.createElement(DownOutlined, {\n        onClick: () => this.toggleExpand(item, !item.expand),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(RightOutlined, {\n        onClick: () => this.toggleExpand(item, !item.expand),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 35\n        }\n      }) : null, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: item.checked,\n        indeterminate: item.indeterminate,\n        onChange: () => this.setNodeStatus(item, !item.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }\n      }, item.title), this.generateTree(item.children, item))));\n    };\n  }\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, this.generateTree(data, root));\n  }\n\n}\n\n;\nTreeSelect.propTypes = {\n  allowClear: Boolean,\n  placeholder: String,\n  searchPlaceholder: String,\n  showCheckedStrategy: String,\n  dropDownStyle: Object,\n  style: Object,\n  treeData: Array,\n  value: Array,\n  searchRange: Array,\n  onChange: Function,\n  filterTreeNode: Function\n};\nexport default TreeSelect;","map":{"version":3,"sources":["/Users/qitong/练习/TreeSelect/src/TreeSelect/index.js"],"names":["React","Checkbox","DownOutlined","RightOutlined","clone","TreeSelect","Component","generateTree","data","lastNode","map","item","Array","isArray","children","expend","toggleExpand","expand","checked","indeterminate","setNodeStatus","title","render","props","root","propTypes","allowClear","Boolean","placeholder","String","searchPlaceholder","showCheckedStrategy","dropDownStyle","Object","style","treeData","value","searchRange","onChange","Function","filterTreeNode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,MAAvB;AACA,SAAQC,YAAR,EAAsBC,aAAtB,QAA0C,mBAA1C;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAwC;AAAA;AAAA;;AAAA,SAGpCC,YAHoC,GAGrB,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAC/B,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIQD,IAAI,CAACE,GAAL,CAASC,IAAI,iBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQC,KAAK,CAACC,OAAN,CAAcF,IAAI,CAACG,QAAnB,IACEH,IAAI,CAACI,MAAL,gBACF,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAM,KAAKC,YAAL,CAAkBL,IAAlB,EAAwB,CAACA,IAAI,CAACM,MAA9B,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,gBAEA,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAE,MAAM,KAAKD,YAAL,CAAkBL,IAAlB,EAAwB,CAACA,IAAI,CAACM,MAA9B,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,GAIE,IANV,eAQI,oBAAC,QAAD;AACI,QAAA,OAAO,EAAEN,IAAI,CAACO,OADlB;AAEI,QAAA,aAAa,EAAEP,IAAI,CAACQ,aAFxB;AAGI,QAAA,QAAQ,EAAE,MAAM,KAAKC,aAAL,CAAmBT,IAAnB,EAAyB,CAACA,IAAI,CAACO,OAA/B,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKKP,IAAI,CAACU,KALV,CARJ,EAgBQ,KAAKd,YAAL,CAAkBI,IAAI,CAACG,QAAvB,EAAiCH,IAAjC,CAhBR,CADJ,CAJR,CADJ;AA6BH,KAjCmC;AAAA;;AAmCpCW,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACd,MAAAA;AAAD,QAAS,KAAKe,KAApB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKhB,YAAL,CAAkBC,IAAlB,EAAwBgB,IAAxB,CAFR,CADJ;AAOH;;AA5CmC;;AA6CvC;AAEDnB,UAAU,CAACoB,SAAX,GAAuB;AACnBC,EAAAA,UAAU,EAAEC,OADO;AAEnBC,EAAAA,WAAW,EAAEC,MAFM;AAGnBC,EAAAA,iBAAiB,EAAED,MAHA;AAInBE,EAAAA,mBAAmB,EAAEF,MAJF;AAKnBG,EAAAA,aAAa,EAAEC,MALI;AAMnBC,EAAAA,KAAK,EAAED,MANY;AAOnBE,EAAAA,QAAQ,EAAEvB,KAPS;AAQnBwB,EAAAA,KAAK,EAAExB,KARY;AASnByB,EAAAA,WAAW,EAAEzB,KATM;AAUnB0B,EAAAA,QAAQ,EAAEC,QAVS;AAWnBC,EAAAA,cAAc,EAAED;AAXG,CAAvB;AAaA,eAAelC,UAAf","sourcesContent":["import React from 'react';\nimport {Checkbox} from 'antd';\nimport {DownOutlined, RightOutlined} from '@ant-design/icons';\nimport clone from '../utils/index';\n\nclass TreeSelect extends React.Component{\n    \n\n    generateTree = (data, lastNode) => {\n        return (\n            <ul \n\n            >\n                {\n                    data.map(item => (\n                        <li>\n                            {\n                                Array.isArray(item.children) \n                                ? item.expend ? \n                                <DownOutlined onClick={() => this.toggleExpand(item, !item.expand)}/>\n                                : <RightOutlined onClick={() => this.toggleExpand(item, !item.expand)}/>\n                                : null\n                            }\n                            <Checkbox\n                                checked={item.checked}\n                                indeterminate={item.indeterminate}\n                                onChange={() => this.setNodeStatus(item, !item.checked)}\n                            >\n                                {item.title}\n                            </Checkbox>\n                            {\n                                this.generateTree(item.children, item)\n                            }\n                        </li>\n                    ))\n                }\n            </ul>\n        )\n    };\n\n    render(){\n        const {data} = this.props;\n        return (\n            <div>\n                {\n                    this.generateTree(data, root)\n                }\n            </div>\n        )\n    }\n};\n\nTreeSelect.propTypes = {\n    allowClear: Boolean,\n    placeholder: String,\n    searchPlaceholder: String,\n    showCheckedStrategy: String,\n    dropDownStyle: Object,\n    style: Object,\n    treeData: Array,\n    value: Array,\n    searchRange: Array,\n    onChange: Function,\n    filterTreeNode: Function\n}\nexport default TreeSelect;"]},"metadata":{},"sourceType":"module"}